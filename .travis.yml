matrix:
  include:
    # compile example sketches
    - name: 'Compile Examples'
      language: minimal
      env:
        - CLI_VERSION=latest
        - BOARD='arduino:samd:mkrzero'

      before_install:
        - wget http://downloads.arduino.cc/arduino-cli/arduino-cli-$CLI_VERSION-linux64.tar.bz2
        - tar xf arduino-cli-$CLI_VERSION-linux64.tar.bz2
        - mkdir -p "$HOME/bin"
        - mv arduino-cli-*-linux64 $HOME/bin/arduino-cli
        - export PATH="$PATH:$HOME/bin"

        - arduino-cli core update-index
        - arduino-cli core install arduino:samd

        - buildExampleSketch() { arduino-cli compile --verbose --warnings all --fqbn $BOARD "$PWD/examples/$1"; }

      install:
        - mkdir -p "$HOME/Arduino/libraries"
        - ln -s "$PWD" "$HOME/Arduino/libraries/."

      script:
        - buildExampleSketch GPSLocation
        - buildExampleSketch GPSLocationStandy


    # check all code files for compliance with the Arduino code formatting style
    - name: 'Code Formatting Check'
      language: minimal
      before_install:
        # install Artistic Style code formatter tool: http://astyle.sourceforge.net
        - |
          mkdir "${HOME}/astyle";
          wget --no-verbose --output-document="${HOME}/astyle/astyle.tar.gz" "https://iweb.dl.sourceforge.net/project/astyle/astyle/astyle%203.1/astyle_3.1_linux.tar.gz";
          tar --extract --file="${HOME}/astyle/astyle.tar.gz" --directory="${HOME}/astyle";
          cd "${HOME}/astyle/astyle/build/gcc";
          make;
          export PATH="$PWD/bin:$PATH";
          cd "$TRAVIS_BUILD_DIR"
        # download Arduino's Artistic Style configuration file
        - wget --directory-prefix="${HOME}/astyle" https://raw.githubusercontent.com/arduino/Arduino/master/build/shared/examples_formatter.conf
      script:
        # check code formatting
        - find . -regextype posix-extended -path './.git' -prune -or -path './src/minmea' -prune -or \( -iregex '.*\.((ino)|(h)|(hpp)|(hh)|(hxx)|(h\+\+)|(cpp)|(cc)|(cxx)|(c\+\+)|(cp)|(c)|(ipp)|(ii)|(ixx)|(inl)|(tpp)|(txx)|(tpl))$' -and -type f \) -print0 | xargs -0 -L1 bash -c 'if ! diff "$0" <(astyle --options="${HOME}/astyle/examples_formatter.conf" --dry-run < "$0"); then echo "Non-compliant code formatting in $0"; false; fi'


    # check all files for commonly misspelled words
    - name: 'Spell Check'
      language: python
      python: 3.6
      before_install:
        # https://github.com/codespell-project/codespell
        - pip install codespell
      script:
        # codespell will ignore any words in extras/codespell-ignore-words-list.txt, which may be used to fix false positives
        - codespell --skip="${TRAVIS_BUILD_DIR}/.git,${TRAVIS_BUILD_DIR}/src/minmea" --ignore-words="${TRAVIS_BUILD_DIR}/extras/codespell-ignore-words-list.txt" "${TRAVIS_BUILD_DIR}"


notifications:
  webhooks:
    # use TravisBuddy to comment on any pull request that results in a failed CI build
    urls:
      - https://www.travisbuddy.com/
    on_success: never
    on_failure: always
